{"remainingRequest":"C:\\workdesk\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workdesk\\vue\\src\\views\\intersection-observer.vue?vue&type=style&index=0&scope=true&lang=css&","dependencies":[{"path":"C:\\workdesk\\vue\\src\\views\\intersection-observer.vue","mtime":1535702060535},{"path":"C:\\workdesk\\vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\workdesk\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\workdesk\\vue\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workdesk\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536892161856},{"path":"C:\\workdesk\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.scrollerFooter {\n    height: 200px;\n    overflow-y: auto;\n}\n",{"version":3,"sources":["intersection-observer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA","file":"intersection-observer.vue","sourceRoot":"src\\views","sourcesContent":["<template>\r\n    <div>\r\n        <p>比如无限滚动</p>\r\n        <p class=\"add\">添加</p>\r\n        <div class=\"scrollerFooter\">\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p class=\"observer\">11111111</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        temName: '测试',\r\n        components: {},\r\n        data() {\r\n            return {}\r\n        },\r\n        computed: {\r\n\r\n        },\r\n        methods: {\r\n            callback(entries) {\r\n                //If intersectionRatio is 0, the target is out of view\r\n                //and we do not need to do anything\r\n                if (entries[0].intersectionRatio <= 0) return\r\n\r\n                this.loadItems()\r\n            },\r\n            loadItems() {\r\n                let wraper = document.querySelector('.scrollerFooter')\r\n                let listItem = document.querySelector('.add').cloneNode(true)\r\n                wraper.append(listItem)\r\n            }\r\n        },\r\n        mounted() {\r\n            const options = { \r\n                root: document.querySelector('#scrollArea'),\r\n                rootMargin: '40px',\r\n                threshold: 1.0 \r\n            }\r\n\r\n            var intersectionObserver = new IntersectionObserver(entries => this.callback(entries), options)\r\n            // start observing\r\n            intersectionObserver.observe(document.querySelector('.observer'))\r\n        }\r\n    }\r\n</script>\r\n<style scope> \r\n    .scrollerFooter {\r\n        height: 200px;\r\n        overflow-y: auto;\r\n    }\r\n</style>"]}]}