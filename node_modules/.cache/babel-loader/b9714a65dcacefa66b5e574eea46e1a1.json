{"remainingRequest":"C:\\workdesk\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\workdesk\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\workdesk\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workdesk\\vue\\src\\views\\intersection-observer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\workdesk\\vue\\src\\views\\intersection-observer.vue","mtime":1536889326423},{"path":"C:\\workdesk\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536892161856},{"path":"C:\\workdesk\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workdesk\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536892161856},{"path":"C:\\workdesk\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  temName: '测试',\n  components: {},\n  data: function data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    callback: function callback(entries) {\n      //If intersectionRatio is 0, the target is out of view\n      //and we do not need to do anything\n      if (entries[0].intersectionRatio <= 0) return;\n      this.loadItems();\n    },\n    loadItems: function loadItems() {\n      var wraper = document.querySelector('.scrollerFooter');\n      var listItem = document.querySelector('.add').cloneNode(true);\n      wraper.append(listItem);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var options = {\n      root: document.querySelector('#scrollArea'),\n      rootMargin: '40px',\n      threshold: 1.0\n    };\n    var intersectionObserver = new IntersectionObserver(function (entries) {\n      return _this.callback(entries);\n    }, options); // start observing\n\n    intersectionObserver.observe(document.querySelector('.observer'));\n  }\n};",{"version":3,"sources":["intersection-observer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,eAAA;AACA,WAAA,IADA;AAEA,cAAA,EAFA;AAGA,MAHA,kBAGA;AACA,WAAA,EAAA;AACA,GALA;AAMA,YAAA,EANA;AAQA,WAAA;AACA,YADA,oBACA,OADA,EACA;AACA;AACA;AACA,UAAA,QAAA,CAAA,EAAA,iBAAA,IAAA,CAAA,EAAA;AACA,WAAA,SAAA;AACA,KANA;AAOA,aAPA,uBAOA;AACA,UAAA,SAAA,SAAA,aAAA,CAAA,iBAAA,CAAA;AACA,UAAA,WAAA,SAAA,aAAA,CAAA,MAAA,EAAA,SAAA,CAAA,IAAA,CAAA;AACA,aAAA,MAAA,CAAA,QAAA;AACA;AAXA,GARA;AAqBA,SArBA,qBAqBA;AAAA;;AACA,QAAA,UAAA;AACA,YAAA,SAAA,aAAA,CAAA,aAAA,CADA;AAEA,kBAAA,MAFA;AAGA,iBAAA;AAHA,KAAA;AAKA,QAAA,uBAAA,IAAA,oBAAA,CAAA;AAAA,aAAA,MAAA,QAAA,CAAA,OAAA,CAAA;AAAA,KAAA,EAAA,OAAA,CAAA,CANA,CAOA;;AACA,yBAAA,OAAA,CAAA,SAAA,aAAA,CAAA,WAAA,CAAA;AACA;AA9BA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <p>比如无限滚动</p>\r\n        <p class=\"add\">添加</p>\r\n        <div class=\"scrollerFooter\">\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p>asdf</p>\r\n            <p class=\"observer\">11111111</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        temName: '测试',\r\n        components: {},\r\n        data() {\r\n            return {}\r\n        },\r\n        computed: {\r\n        },\r\n        methods: {\r\n            callback(entries) {\r\n                //If intersectionRatio is 0, the target is out of view\r\n                //and we do not need to do anything\r\n                if (entries[0].intersectionRatio <= 0) return\r\n                this.loadItems()\r\n            },\r\n            loadItems() {\r\n                let wraper = document.querySelector('.scrollerFooter')\r\n                let listItem = document.querySelector('.add').cloneNode(true)\r\n                wraper.append(listItem)\r\n            }\r\n        },\r\n        mounted() {\r\n            const options = { \r\n                root: document.querySelector('#scrollArea'),\r\n                rootMargin: '40px',\r\n                threshold: 1.0 \r\n            }\r\n            var intersectionObserver = new IntersectionObserver(entries => this.callback(entries), options)\r\n            // start observing\r\n            intersectionObserver.observe(document.querySelector('.observer'))\r\n        }\r\n    }\r\n</script>\r\n<style scope> \r\n    .scrollerFooter {\r\n        height: 200px;\r\n        overflow-y: auto;\r\n    }\r\n</style>"],"sourceRoot":"src\\views"}]}